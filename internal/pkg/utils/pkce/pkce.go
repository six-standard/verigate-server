// Package pkce provides utilities for implementing Proof Key for Code Exchange (PKCE),
// an extension to the OAuth authorization code flow that prevents authorization code interception attacks.
package pkce

import (
	"crypto/sha256"
	"encoding/base64"
)

// VerifyCodeChallenge validates a PKCE code challenge against a code verifier.
// It supports both "plain" and "S256" transformation methods as defined in RFC 7636.
// Parameters:
//   - codeVerifier: The original code verifier generated by the client
//   - codeChallenge: The challenge previously sent during authorization request
//   - method: The challenge method ("plain" or "S256")
//
// Returns true if the verification is successful, false otherwise.
func VerifyCodeChallenge(codeVerifier, codeChallenge, method string) bool {
	if method == "plain" {
		return codeVerifier == codeChallenge
	}

	if method == "S256" {
		h := sha256.New()
		h.Write([]byte(codeVerifier))
		challenge := base64.RawURLEncoding.EncodeToString(h.Sum(nil))
		return challenge == codeChallenge
	}

	return false
}
